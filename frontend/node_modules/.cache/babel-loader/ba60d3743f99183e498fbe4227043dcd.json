{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '../../../services/api';\nimport { editDeliverymanSuccess, editDeliverymanFailure, updateDeliverymanSuccess, updateDeliverymanFailure } from './actions';\nimport history from '../../../services/history';\nexport function* editDeliveryman({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n\n  try {\n    const response = yield call(api.get, `/deliveryman/${id}`);\n    yield put(editDeliverymanSuccess(response.data));\n    history.push('/entregadores_edicao');\n  } catch ({\n    response\n  }) {\n    yield put(editDeliverymanFailure());\n    console.tron.log(response.data.error);\n  }\n}\nexport function* updateDeliveryman({\n  payload\n}) {\n  const {\n    id,\n    name,\n    email,\n    avatar_id\n  } = payload.data;\n\n  try {\n    yield call(api.put, `/deliveryman/${id}`, {\n      name,\n      email,\n      avatar_id\n    });\n    yield put(updateDeliverymanSuccess());\n    toast.success('Entregador atualizado!');\n    history.push('/entregadores');\n  } catch ({\n    response\n  }) {\n    yield put(updateDeliverymanFailure());\n    console.tron.log(response.data.error);\n  }\n}\nexport function* createDeliveryman({\n  payload\n}) {\n  const {\n    id,\n    name,\n    email,\n    avatar_id\n  } = payload.data;\n}\nexport default all([takeLatest('@deliveryman/EDIT_REQUEST', editDeliveryman), takeLatest('@deliveryman/UPDATE_REQUEST', updateDeliveryman), takeLatest('@deliveryman/CREATE_REQUEST', createDeliveryman)]);","map":{"version":3,"sources":["/Users/Enrick/desafio09/src/store/modules/deliveryman/sagas.js"],"names":["all","call","put","takeLatest","toast","api","editDeliverymanSuccess","editDeliverymanFailure","updateDeliverymanSuccess","updateDeliverymanFailure","history","editDeliveryman","payload","id","response","get","data","push","console","tron","log","error","updateDeliveryman","name","email","avatar_id","success","createDeliveryman"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,wBAHF,EAIEC,wBAJF,QAKO,WALP;AAOA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAuC;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAf;;AAEA,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMb,IAAI,CAACI,GAAG,CAACU,GAAL,EAAW,gBAAeF,EAAG,EAA7B,CAA3B;AAEA,UAAMX,GAAG,CAACI,sBAAsB,CAACQ,QAAQ,CAACE,IAAV,CAAvB,CAAT;AAEAN,IAAAA,OAAO,CAACO,IAAR,CAAa,sBAAb;AACD,GAND,CAME,OAAO;AAAEH,IAAAA;AAAF,GAAP,EAAqB;AACrB,UAAMZ,GAAG,CAACK,sBAAsB,EAAvB,CAAT;AACAW,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBN,QAAQ,CAACE,IAAT,CAAcK,KAA/B;AACD;AACF;AAED,OAAO,UAAUC,iBAAV,CAA4B;AAAEV,EAAAA;AAAF,CAA5B,EAAyC;AAC9C,QAAM;AAAEC,IAAAA,EAAF;AAAMU,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAiCb,OAAO,CAACI,IAA/C;;AAEA,MAAI;AACF,UAAMf,IAAI,CAACI,GAAG,CAACH,GAAL,EAAW,gBAAeW,EAAG,EAA7B,EAAgC;AACxCU,MAAAA,IADwC;AAExCC,MAAAA,KAFwC;AAGxCC,MAAAA;AAHwC,KAAhC,CAAV;AAMA,UAAMvB,GAAG,CAACM,wBAAwB,EAAzB,CAAT;AAEAJ,IAAAA,KAAK,CAACsB,OAAN,CAAc,wBAAd;AAEAhB,IAAAA,OAAO,CAACO,IAAR,CAAa,eAAb;AACD,GAZD,CAYE,OAAO;AAAEH,IAAAA;AAAF,GAAP,EAAqB;AACrB,UAAMZ,GAAG,CAACO,wBAAwB,EAAzB,CAAT;AACAS,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBN,QAAQ,CAACE,IAAT,CAAcK,KAA/B;AACD;AACF;AAED,OAAO,UAAUM,iBAAV,CAA4B;AAAEf,EAAAA;AAAF,CAA5B,EAAyC;AAC9C,QAAM;AAAEC,IAAAA,EAAF;AAAMU,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAiCb,OAAO,CAACI,IAA/C;AACD;AAED,eAAehB,GAAG,CAAC,CACjBG,UAAU,CAAC,2BAAD,EAA8BQ,eAA9B,CADO,EAEjBR,UAAU,CAAC,6BAAD,EAAgCmB,iBAAhC,CAFO,EAGjBnB,UAAU,CAAC,6BAAD,EAAgCwB,iBAAhC,CAHO,CAAD,CAAlB","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\n\nimport { toast } from 'react-toastify';\n\nimport api from '../../../services/api';\n\nimport {\n  editDeliverymanSuccess,\n  editDeliverymanFailure,\n  updateDeliverymanSuccess,\n  updateDeliverymanFailure,\n} from './actions';\n\nimport history from '../../../services/history';\n\nexport function* editDeliveryman({ payload }) {\n  const { id } = payload;\n\n  try {\n    const response = yield call(api.get, `/deliveryman/${id}`);\n\n    yield put(editDeliverymanSuccess(response.data));\n\n    history.push('/entregadores_edicao');\n  } catch ({ response }) {\n    yield put(editDeliverymanFailure());\n    console.tron.log(response.data.error);\n  }\n}\n\nexport function* updateDeliveryman({ payload }) {\n  const { id, name, email, avatar_id } = payload.data;\n\n  try {\n    yield call(api.put, `/deliveryman/${id}`, {\n      name,\n      email,\n      avatar_id,\n    });\n\n    yield put(updateDeliverymanSuccess());\n\n    toast.success('Entregador atualizado!');\n\n    history.push('/entregadores');\n  } catch ({ response }) {\n    yield put(updateDeliverymanFailure());\n    console.tron.log(response.data.error);\n  }\n}\n\nexport function* createDeliveryman({ payload }) {\n  const { id, name, email, avatar_id } = payload.data;\n}\n\nexport default all([\n  takeLatest('@deliveryman/EDIT_REQUEST', editDeliveryman),\n  takeLatest('@deliveryman/UPDATE_REQUEST', updateDeliveryman),\n  takeLatest('@deliveryman/CREATE_REQUEST', createDeliveryman),\n]);\n"]},"metadata":{},"sourceType":"module"}