{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { createRecipientSuccess, createRecipientFailure, editRecipientFailure } from './actions';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nexport function* editRecipient({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n\n  try {} catch ({\n    response\n  }) {\n    yield put(editRecipientFailure());\n    console.tron.log(response.data.error);\n    toast.error(response.data.error);\n  }\n}\nexport function* createRecipient({\n  payload\n}) {\n  const {\n    id,\n    name,\n    street,\n    number,\n    complement,\n    state,\n    city,\n    zipcode\n  } = payload.data;\n\n  try {\n    yield call(api.post, '/recipients', {\n      id,\n      name,\n      street,\n      number,\n      complement,\n      state,\n      city,\n      zipcode\n    });\n    yield put(createRecipientSuccess());\n    toast.success('Destinatário adicionado!');\n    history.push('/destinatarios');\n  } catch ({\n    response\n  }) {\n    yield put(createRecipientFailure());\n    console.tron.log(response.data.error);\n    toast.error(response.data.error);\n  }\n}\nexport default all([takeLatest('@recipient/EDIT_REQUEST', editRecipient), takeLatest('@recipient/CREATE_REQUEST', createRecipient)]);","map":{"version":3,"sources":["/Users/Enrick/desafio09/src/store/modules/recipient/sagas.js"],"names":["all","call","put","takeLatest","toast","createRecipientSuccess","createRecipientFailure","editRecipientFailure","api","history","editRecipient","payload","id","response","console","tron","log","data","error","createRecipient","name","street","number","complement","state","city","zipcode","post","success","push"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,oBAHF,QAIO,WAJP;AAMA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,UAAUC,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAf;;AAEA,MAAI,CACH,CADD,CACE,OAAO;AAAEE,IAAAA;AAAF,GAAP,EAAqB;AACrB,UAAMX,GAAG,CAACK,oBAAoB,EAArB,CAAT;AACAO,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBH,QAAQ,CAACI,IAAT,CAAcC,KAA/B;AACAd,IAAAA,KAAK,CAACc,KAAN,CAAYL,QAAQ,CAACI,IAAT,CAAcC,KAA1B;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAER,EAAAA;AAAF,CAA1B,EAAuC;AAC5C,QAAM;AACJC,IAAAA,EADI;AAEJQ,IAAAA,IAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA,IAPI;AAQJC,IAAAA;AARI,MASFf,OAAO,CAACM,IATZ;;AAWA,MAAI;AACF,UAAMhB,IAAI,CAACO,GAAG,CAACmB,IAAL,EAAW,aAAX,EAA0B;AAClCf,MAAAA,EADkC;AAElCQ,MAAAA,IAFkC;AAGlCC,MAAAA,MAHkC;AAIlCC,MAAAA,MAJkC;AAKlCC,MAAAA,UALkC;AAMlCC,MAAAA,KANkC;AAOlCC,MAAAA,IAPkC;AAQlCC,MAAAA;AARkC,KAA1B,CAAV;AAWA,UAAMxB,GAAG,CAACG,sBAAsB,EAAvB,CAAT;AAEAD,IAAAA,KAAK,CAACwB,OAAN,CAAc,0BAAd;AAEAnB,IAAAA,OAAO,CAACoB,IAAR,CAAa,gBAAb;AACD,GAjBD,CAiBE,OAAO;AAAEhB,IAAAA;AAAF,GAAP,EAAqB;AACrB,UAAMX,GAAG,CAACI,sBAAsB,EAAvB,CAAT;AACAQ,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBH,QAAQ,CAACI,IAAT,CAAcC,KAA/B;AACAd,IAAAA,KAAK,CAACc,KAAN,CAAYL,QAAQ,CAACI,IAAT,CAAcC,KAA1B;AACD;AACF;AAED,eAAelB,GAAG,CAAC,CACjBG,UAAU,CAAC,yBAAD,EAA4BO,aAA5B,CADO,EAEjBP,UAAU,CAAC,2BAAD,EAA8BgB,eAA9B,CAFO,CAAD,CAAlB","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\n\nimport { toast } from 'react-toastify';\n\nimport {\n  createRecipientSuccess,\n  createRecipientFailure,\n  editRecipientFailure,\n} from './actions';\n\nimport api from '../../../services/api';\nimport history from '../../../services/history';\n\nexport function* editRecipient({ payload }) {\n  const { id } = payload;\n\n  try {\n  } catch ({ response }) {\n    yield put(editRecipientFailure());\n    console.tron.log(response.data.error);\n    toast.error(response.data.error);\n  }\n}\n\nexport function* createRecipient({ payload }) {\n  const {\n    id,\n    name,\n    street,\n    number,\n    complement,\n    state,\n    city,\n    zipcode,\n  } = payload.data;\n\n  try {\n    yield call(api.post, '/recipients', {\n      id,\n      name,\n      street,\n      number,\n      complement,\n      state,\n      city,\n      zipcode,\n    });\n\n    yield put(createRecipientSuccess());\n\n    toast.success('Destinatário adicionado!');\n\n    history.push('/destinatarios');\n  } catch ({ response }) {\n    yield put(createRecipientFailure());\n    console.tron.log(response.data.error);\n    toast.error(response.data.error);\n  }\n}\n\nexport default all([\n  takeLatest('@recipient/EDIT_REQUEST', editRecipient),\n  takeLatest('@recipient/CREATE_REQUEST', createRecipient),\n]);\n"]},"metadata":{},"sourceType":"module"}