{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { signInSuccess, signFailure } from './actions';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nexport function* signIn({\n  payload\n}) {\n  try {\n    const {\n      email,\n      password\n    } = payload;\n    const response = yield call(api.post, 'sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n\n    if (user.provider === 'false') {\n      toast.error('Somente usuários administradores são permitidos');\n      return;\n    }\n\n    yield put(signInSuccess(token, user));\n    history.push('/entregas');\n  } catch (err) {\n    toast.error('Falha na autenticação, verifique seus dados.');\n    yield put(signFailure());\n  }\n}\nexport function signOut() {\n  history.push('/');\n}\nexport function setToken({\n  payload\n}) {\n  if (payload) {\n    const {\n      token\n    } = payload.auth;\n  }\n}\nexport default all([takeLatest('@auth/SIGN_IN_REQUEST', signIn), takeLatest('@auth/SIGN_OUT', signOut)]);","map":{"version":3,"sources":["/Users/Enrick/desafio09/src/store/modules/auth/sagas.js"],"names":["all","call","put","takeLatest","toast","signInSuccess","signFailure","api","history","signIn","payload","email","password","response","post","token","user","data","provider","error","push","err","signOut","setToken","auth"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,WAA3C;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnC,MAAI;AACF,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBF,OAA5B;AAEA,UAAMG,QAAQ,GAAG,MAAMZ,IAAI,CAACM,GAAG,CAACO,IAAL,EAAW,UAAX,EAAuB;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAvB,CAA3B;AAEA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBH,QAAQ,CAACI,IAAjC;;AAEA,QAAID,IAAI,CAACE,QAAL,KAAkB,OAAtB,EAA+B;AAC7Bd,MAAAA,KAAK,CAACe,KAAN,CAAY,iDAAZ;AACA;AACD;;AAED,UAAMjB,GAAG,CAACG,aAAa,CAACU,KAAD,EAAQC,IAAR,CAAd,CAAT;AAEAR,IAAAA,OAAO,CAACY,IAAR,CAAa,WAAb;AACD,GAfD,CAeE,OAAOC,GAAP,EAAY;AACZjB,IAAAA,KAAK,CAACe,KAAN,CAAY,8CAAZ;AAEA,UAAMjB,GAAG,CAACI,WAAW,EAAZ,CAAT;AACD;AACF;AAED,OAAO,SAASgB,OAAT,GAAmB;AACxBd,EAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD;AAED,OAAO,SAASG,QAAT,CAAkB;AAAEb,EAAAA;AAAF,CAAlB,EAA+B;AACpC,MAAIA,OAAJ,EAAa;AACX,UAAM;AAAEK,MAAAA;AAAF,QAAYL,OAAO,CAACc,IAA1B;AACD;AACF;AAED,eAAexB,GAAG,CAAC,CACjBG,UAAU,CAAC,uBAAD,EAA0BM,MAA1B,CADO,EAEjBN,UAAU,CAAC,gBAAD,EAAmBmB,OAAnB,CAFO,CAAD,CAAlB","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport { signInSuccess, signFailure } from './actions';\n\nimport api from '../../../services/api';\nimport history from '../../../services/history';\n\nexport function* signIn({ payload }) {\n  try {\n    const { email, password } = payload;\n\n    const response = yield call(api.post, 'sessions', { email, password });\n\n    const { token, user } = response.data;\n\n    if (user.provider === 'false') {\n      toast.error('Somente usuários administradores são permitidos');\n      return;\n    }\n\n    yield put(signInSuccess(token, user));\n\n    history.push('/entregas');\n  } catch (err) {\n    toast.error('Falha na autenticação, verifique seus dados.');\n\n    yield put(signFailure());\n  }\n}\n\nexport function signOut() {\n  history.push('/');\n}\n\nexport function setToken({ payload }) {\n  if (payload) {\n    const { token } = payload.auth;\n  }\n}\n\nexport default all([\n  takeLatest('@auth/SIGN_IN_REQUEST', signIn),\n  takeLatest('@auth/SIGN_OUT', signOut),\n]);\n"]},"metadata":{},"sourceType":"module"}