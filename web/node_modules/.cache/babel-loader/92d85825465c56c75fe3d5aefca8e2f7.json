{"ast":null,"code":"var _jsxFileName = \"/Users/Enrick/desafio09/src/pages/Deliverys/DeliverysAdd/DeliverymanInput/index.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useField } from '@unform/core';\nimport AsyncSelect from 'react-select/async';\nimport api from '../../../../services/api';\nexport default function DeliverymanInput({ ...rest\n}) {\n  const [deliveryman, setDeliveryman] = useState([]);\n  const deliverymanRef = useRef(null);\n  const {\n    fieldName,\n    defaultValue,\n    registerField\n  } = useField(null);\n  useEffect(() => {\n    async function loadData() {\n      const response = await api.get('/deliveryman', {\n        params: {\n          name: ''\n        }\n      });\n      const data = response.data.map(d => ({\n        value: d.id,\n        label: d.name\n      }));\n      setDeliveryman(data);\n    }\n\n    loadData();\n  }, []);\n  useEffect(() => {\n    registerField({\n      name: 'deliveryman_id',\n      ref: deliverymanRef.current,\n      path: 'select.state.value',\n      getValue: ref => {\n        if (rest.isMulti) {\n          if (!ref.select.state.value) {\n            return [];\n          }\n\n          return ref.select.state.value.map(option => option.value);\n        }\n\n        if (!ref.select.state.value) {\n          return '';\n        }\n\n        return ref.select.state.value.value;\n      }\n    });\n  }, [fieldName, registerField, rest.isMulti]);\n  return React.createElement(AsyncSelect, Object.assign({\n    cacheOptions: true,\n    defaultOptions: deliveryman,\n    defaultValue: defaultValue,\n    ref: deliverymanRef,\n    classNamePrefix: \"react-select\"\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/Enrick/desafio09/src/pages/Deliverys/DeliverysAdd/DeliverymanInput/index.js"],"names":["React","useRef","useEffect","useState","useField","AsyncSelect","api","DeliverymanInput","rest","deliveryman","setDeliveryman","deliverymanRef","fieldName","defaultValue","registerField","loadData","response","get","params","name","data","map","d","value","id","label","ref","current","path","getValue","isMulti","select","state","option"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,eAAe,SAASC,gBAAT,CAA0B,EAAE,GAAGC;AAAL,CAA1B,EAAuC;AACpD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMQ,cAAc,GAAGV,MAAM,CAAC,IAAD,CAA7B;AAEA,QAAM;AAAEW,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAA6CV,QAAQ,CAAC,IAAD,CAA3D;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAJ,CAAQ,cAAR,EAAwB;AAC7CC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE;AADA;AADqC,OAAxB,CAAvB;AAKA,YAAMC,IAAI,GAAGJ,QAAQ,CAACI,IAAT,CAAcC,GAAd,CAAkBC,CAAC,KAAK;AACnCC,QAAAA,KAAK,EAAED,CAAC,CAACE,EAD0B;AAEnCC,QAAAA,KAAK,EAAEH,CAAC,CAACH;AAF0B,OAAL,CAAnB,CAAb;AAKAT,MAAAA,cAAc,CAACU,IAAD,CAAd;AACD;;AAEDL,IAAAA,QAAQ;AACT,GAhBQ,EAgBN,EAhBM,CAAT;AAkBAb,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAAC;AACZK,MAAAA,IAAI,EAAE,gBADM;AAEZO,MAAAA,GAAG,EAAEf,cAAc,CAACgB,OAFR;AAGZC,MAAAA,IAAI,EAAE,oBAHM;AAIZC,MAAAA,QAAQ,EAAEH,GAAG,IAAI;AACf,YAAIlB,IAAI,CAACsB,OAAT,EAAkB;AAChB,cAAI,CAACJ,GAAG,CAACK,MAAJ,CAAWC,KAAX,CAAiBT,KAAtB,EAA6B;AAC3B,mBAAO,EAAP;AACD;;AACD,iBAAOG,GAAG,CAACK,MAAJ,CAAWC,KAAX,CAAiBT,KAAjB,CAAuBF,GAAvB,CAA2BY,MAAM,IAAIA,MAAM,CAACV,KAA5C,CAAP;AACD;;AACD,YAAI,CAACG,GAAG,CAACK,MAAJ,CAAWC,KAAX,CAAiBT,KAAtB,EAA6B;AAC3B,iBAAO,EAAP;AACD;;AACD,eAAOG,GAAG,CAACK,MAAJ,CAAWC,KAAX,CAAiBT,KAAjB,CAAuBA,KAA9B;AACD;AAfW,KAAD,CAAb;AAiBD,GAlBQ,EAkBN,CAACX,SAAD,EAAYE,aAAZ,EAA2BN,IAAI,CAACsB,OAAhC,CAlBM,CAAT;AAoBA,SACE,oBAAC,WAAD;AACE,IAAA,YAAY,MADd;AAEE,IAAA,cAAc,EAAErB,WAFlB;AAGE,IAAA,YAAY,EAAEI,YAHhB;AAIE,IAAA,GAAG,EAAEF,cAJP;AAKE,IAAA,eAAe,EAAC;AALlB,KAMMH,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAUD","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nimport { useField } from '@unform/core';\nimport AsyncSelect from 'react-select/async';\n\nimport api from '../../../../services/api';\n\nexport default function DeliverymanInput({ ...rest }) {\n  const [deliveryman, setDeliveryman] = useState([]);\n\n  const deliverymanRef = useRef(null);\n\n  const { fieldName, defaultValue, registerField } = useField(null);\n\n  useEffect(() => {\n    async function loadData() {\n      const response = await api.get('/deliveryman', {\n        params: {\n          name: '',\n        },\n      });\n      const data = response.data.map(d => ({\n        value: d.id,\n        label: d.name,\n      }));\n\n      setDeliveryman(data);\n    }\n\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: 'deliveryman_id',\n      ref: deliverymanRef.current,\n      path: 'select.state.value',\n      getValue: ref => {\n        if (rest.isMulti) {\n          if (!ref.select.state.value) {\n            return [];\n          }\n          return ref.select.state.value.map(option => option.value);\n        }\n        if (!ref.select.state.value) {\n          return '';\n        }\n        return ref.select.state.value.value;\n      },\n    });\n  }, [fieldName, registerField, rest.isMulti]);\n\n  return (\n    <AsyncSelect\n      cacheOptions\n      defaultOptions={deliveryman}\n      defaultValue={defaultValue}\n      ref={deliverymanRef}\n      classNamePrefix=\"react-select\"\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}